---
// public/assets/newsletter/signup.png
import signupImage from '/public/assets/newsletter/signup1.jpg';
import { Picture } from 'astro:assets';

interface Props {
  autoShow?: boolean;
  buttonClass?: string;
  buttonText?: string;
  showAfterDelay?: number; // Time in seconds
}

const {
  autoShow = false,
  buttonClass = "py-3 px-5 text-sm font-medium text-center text-white rounded-lg cursor-pointer bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800",
  buttonText = "Subscribe to Newsletter",
  showAfterDelay = 0
} = Astro.props;
---
<script>
  // Need to import Flowbite this way in client-side scripts
  import 'flowbite';

  class NewsletterModal {
    private modal: any;
    private timer: number | null = null;

    constructor() {
      const modalEl = document.getElementById('newsletter-modal');
      if (!modalEl) return;

      // @ts-ignore - Flowbite types
      this.modal = new window.Modal(modalEl, {
        placement: 'center'
      });

      const closeModalEl = document.getElementById('close-modal');
      if (closeModalEl) {
        closeModalEl.addEventListener('click', () => {
          this.modal?.hide();
          if (this.timer) {
            window.clearTimeout(this.timer);
            this.timer = null;
          }
        });
      }

      const openModalEl = document.getElementById('open-newsletter-modal');
      if (openModalEl) {
        openModalEl.addEventListener('click', () => this.modal?.show());
      }
    }

    initialize(autoShow: boolean, delayInSeconds: number) {
      if (!this.modal) return;

      if (autoShow) {
        this.modal.show();
      } else if (delayInSeconds > 0) {
        this.timer = window.setTimeout(() => {
          this.modal?.show();
        }, delayInSeconds * 1000);
      }
    }
  }

  document.addEventListener('DOMContentLoaded', function() {
    const newsletter = new NewsletterModal();
    const modalEl = document.getElementById('newsletter-modal');
    const autoShow = modalEl?.dataset.autoShow === 'true';
    const showAfterDelay = Number(modalEl?.dataset.showAfterDelay || '0');
    newsletter.initialize(autoShow, showAfterDelay);
  });
</script>

<button id="open-newsletter-modal" type="button" class={buttonClass}>
  {buttonText}
</button>

<div
  id="newsletter-modal"
  data-auto-show={autoShow}
  data-show-after-delay={showAfterDelay}
  data-modal
  tabindex="-1"
  class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 w-full md:inset-0 h-modal md:h-full"
>
  <div class="relative p-4 w-full max-w-2xl h-full rounded-lg md:h-auto">
      <!-- Modal content -->
      <div class="flex relative items-center bg-white rounded-lg shadow dark:bg-gray-800">
          <!-- <img src="https://flowbite.s3.amazonaws.com/blocks/marketing-ui/newsletter/people-at-office.png" class="hidden rounded-l-lg md:flex h-64" alt="office"> -->
          {signupImage && (
            <Picture
              src={signupImage}
              alt="Newsletter Signup"
              width={400}
              height={300}
              widths={[400, 800]}
              formats={['webp', 'avif', 'jpg']}
              inferSize={true}
              class="hidden md:flex h-64 rounded-l-lg object-cover"
            />
          )}
          <div>
              <button type="button" class="text-gray-400 absolute top-3 right-3 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white" id="close-modal">
                  <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
              </button>
              <!-- Modal body -->
              <div class="p-6 pt-4">
                  <h3 class="mb-2 text-xl font-semibold tracking-tight text-gray-900 dark:text-white">
                      Short on time? Weâ€™ve got you covered.
                  </h3>
                  <p class="mb-4 text-base leading-relaxed text-gray-500 dark:text-gray-400">
                      Subscribe and receive automation hacks and onboarding guides for HubSpot that you can implement in 60 minutes or less.
                  </p>
                  <form action="#">
                      <div class="items-center mx-auto space-y-4 max-w-screen-sm sm:flex sm:space-y-0">
                          <div class="relative mr-3 w-full">
                              <label for="email" class="hidden mb-2 text-sm font-medium text-gray-900 sr-only dark:text-gray-300">Email address</label>
                              <div class="flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none">
                                  <svg class="w-5 h-5 text-gray-500 dark:text-gray-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"></path><path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"></path></svg>
                              </div>
                              <input class="block p-3 pl-10 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Your email" type="email" id="email" required="">
                          </div>
                          <div>
                              <button type="submit" class="py-3 px-5 w-full text-sm font-medium text-center text-white rounded-lg cursor-pointer bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800">Subscribe</button>
                          </div>
                      </div>
                  </form>
              </div>
          </div>
      </div>
  </div>
</div>
